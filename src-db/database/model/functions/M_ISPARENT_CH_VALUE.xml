<?xml version="1.0"?>
  <database name="FUNCTION M_ISPARENT_CH_VALUE">
    <function name="M_ISPARENT_CH_VALUE" type="NUMERIC" volatility="STABLE">
      <parameter name="p_ch_value_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_parent_ch_value_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_char_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2014-2019 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
/*************************************************************************
* Title: Return 'Characteristic Value Level' if ch_value_id is a leaf of the characteristic tree
*    where parent_ch_value_id is the root. Else return -1
************************************************************************/
  v_Level NUMBER:=0;
  v_treeID varchar2(32) ;
  v_Parent VARCHAR(32) ;
  v_Node   VARCHAR(32) ;
BEGIN
  SELECT MAX(AD_TREE_ID)
  INTO v_treeID
  FROM m_characteristic
  WHERE m_characteristic_id = p_char_id;
  v_Parent := p_ch_value_id;
  WHILE v_Parent IS NOT NULL
  LOOP
    v_Level:=v_Level + 1;
    SELECT MAX(NODE_ID),
      MAX(PARENT_ID)
    INTO v_Node,
      v_Parent
    FROM AD_TREENODE
    WHERE AD_TREE_ID=v_treeID
      AND NODE_ID=v_Parent;
    IF v_Node=p_parent_ch_value_id THEN
      RETURN v_Level;
    END IF;
  END LOOP;
  RETURN(-1) ;
END M_ISPARENT_CH_VALUE
]]></body>
    </function>
  </database>
