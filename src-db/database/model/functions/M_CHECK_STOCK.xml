<?xml version="1.0"?>
  <database name="FUNCTION M_CHECK_STOCK">
    <function name="M_CHECK_STOCK" type="NULL" volatility="STABLE">
      <parameter name="p_m_product_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_ad_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_ad_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_result" type="NUMERIC" mode="out">
        <default/>
      </parameter>
      <parameter name="p_message" type="VARCHAR" mode="out">
        <default/>
      </parameter>
      <parameter name="p_m_locator_id" type="VARCHAR" mode="in">
        <default><![CDATA[NULL]]></default>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2019 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  v_ResultStr VARCHAR2(2000):='';
  v_ExistsNegativeStock NUMBER;
BEGIN
  v_ResultStr:='Checking stock';
  p_Result:=1;
  SELECT count(1)
  INTO v_ExistsNegativeStock
  FROM DUAL
  WHERE EXISTS
    ( SELECT 1
      FROM M_STORAGE_DETAIL SD
      JOIN M_LOCATOR L ON (L.M_LOCATOR_ID = SD.M_LOCATOR_ID)
      JOIN M_INVENTORYSTATUS INVS ON (INVS.M_INVENTORYSTATUS_ID = L.M_INVENTORYSTATUS_ID)
      WHERE M_PRODUCT_ID=p_M_Product_ID
      AND SD.AD_CLIENT_ID=p_AD_Client_ID
      AND (QTYONHAND<0 OR COALESCE(QTYORDERONHAND,0)<0)
      AND INVS.OVERISSUE='N'
      AND L.M_LOCATOR_ID = COALESCE(p_m_locator_id, L.M_LOCATOR_ID));
  IF(v_ExistsNegativeStock <> 0) THEN
    p_Result:=0;
    p_Message:='@NotEnoughStocked@';
  END IF;
RETURN;
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  RAISE;
  RETURN;
END M_CHECK_STOCK
]]></body>
    </function>
  </database>
