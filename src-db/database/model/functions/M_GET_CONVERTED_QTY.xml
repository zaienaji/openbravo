<?xml version="1.0"?>
  <database name="FUNCTION M_GET_CONVERTED_QTY">
    <function name="M_GET_CONVERTED_QTY" type="NUMERIC" volatility="STABLE">
      <parameter name="p_mproductid" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_qty" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_touom" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2016-2019 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
*
* This function receives a qty in the AUM defined to a product and returns
* it transformed in the BUM of the product.
*
*  Parameters:
*    p_mproductid character varying: The product id
*    p_qty numeric: The quantity to convert
*    p_touom character varying: The destination unit of measure
*  Returns:
*    The quantity converted using the conversion rate between the
*    alternative unit of measure of the product and the BUM passed at
*    parameter, or the same qty if any conversion can be applied.
************************************************************************/

  v_rate NUMBER:= NULL;
  v_result NUMBER:= NULL;
  v_bum VARCHAR(32);
  v_precision NUMBER;

BEGIN

  -- Nothing to do
  IF(p_mProductId IS NULL OR p_toUOM IS NULL OR p_qty IS NULL OR p_qty = 0) THEN
    RETURN p_qty;
  END IF;

  SELECT c_uom_id INTO v_bum FROM M_PRODUCT WHERE M_PRODUCT_ID = p_mProductId;
  IF v_bum = p_toUOM THEN
    RETURN p_qty;
  END IF;
  
  v_result := p_qty;

  -- Get Conversion Rate
  SELECT conversionrate INTO v_Rate
      FROM m_product_aum
      WHERE m_product_id = p_mProductId
      AND c_uom_id = p_toUOM;

  IF(v_rate IS NOT NULL) THEN
    v_result := p_qty * v_rate;
  END IF;

  SELECT stdprecision INTO v_precision FROM c_uom WHERE c_uom_id = p_toUOM;
  v_result := ROUND(v_result, v_precision);

  RETURN v_result;
END M_GET_CONVERTED_QTY
]]></body>
    </function>
  </database>
