<?xml version="1.0"?>
  <database name="FUNCTION C_GET_NET_AMOUNT_FROM_GROSS">
    <function name="C_GET_NET_AMOUNT_FROM_GROSS" type="NUMERIC" volatility="STABLE">
      <parameter name="p_tax_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_grossamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_alternatetaxbaseamt" type="NUMERIC" mode="in">
        <default/>
      </parameter>
      <parameter name="p_stdprecision" type="NUMERIC" mode="in">
        <default><![CDATA[NULL]]></default>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2017-2019 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/

/*
* It returns the Net Amount calculated from the Gross Amount after applying the Tax.
* Net Amount will be rounded to p_stdprecision if not NULL,
* otherwise it will be rounded to a big precision (50) to avoid rounding issues.
*/

v_ResultStr VARCHAR(2000) := '';
v_calcPrecision NUMBER:= 50;
v_TaxAmount NUMBER;
v_NetAmount NUMBER;

BEGIN --BODY

  IF (p_grossamt = 0) THEN
    RETURN 0;
  END IF;

  v_TaxAmount := C_GET_TAX_AMT_FROM_NET(p_tax_id, p_grossamt, p_alternatetaxbaseamt, v_calcPrecision, 0);
  -- Do multiplication before division to avoid wrong calculation in PostgreSQL. See Issue 35486.
  v_NetAmount := ROUND((p_grossamt * p_grossamt) / (p_grossamt + v_TaxAmount), v_calcPrecision);
  IF (p_stdprecision IS NOT NULL) THEN
    v_NetAmount := ROUND(v_NetAmount, p_stdprecision);
  END IF;
  RETURN v_NetAmount;

EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  RAISE;
  RETURN NULL;
END C_GET_NET_AMOUNT_FROM_GROSS
]]></body>
    </function>
  </database>
